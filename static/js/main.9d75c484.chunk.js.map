{"version":3,"sources":["logo.svg","img/download.svg","serviceWorker.js","Components/Login/CalliLogin.jsx","Components/Header.js","Components/Hompages/Landing.jsx","Components/Login/Forms.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","iconColor","color","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","greenButton","border","font","fontSize","fabBackround","borderColor","Facebook","className","SvgIcon","fill","xmlns","viewBox","height","d","CalliLogin","PasswordInput","prop","classes","React","useState","password","showPassword","values","setValues","FormControl","clsx","variant","InputLabel","htmlFor","OutlinedInput","id","type","value","onChange","event","target","startAdornment","InputAdornment","position","size","style","endAdornment","IconButton","aria-label","onClick","onMouseDown","preventDefault","edge","labelWidth","EmailTextField","TextField","required","label","InputProps","backgroundColor","ForgotPasswordComponent","Button","CheckBoxComponent","StylesProvider","FormControlLabel","control","Checkbox","labelplacement","StyledFabTwitter","Fab","StyledFabGoogle","StyledFabFacebook","StyledButton","myStyle","StyledButton2","injectFirst","FormController","Landing","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d75c484.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.17663dde.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../../Css/CalliLogin.css\";\r\nimport clsx from \"clsx\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport { makeStyles, StylesProvider } from \"@material-ui/core/styles\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\n// import Particles from \"react-particles-js\";\r\n// import Tilt from \"react-tilt\";npm start\r\n\r\n//  i am still working on this interface\r\nconst iconColor = {\r\n  color: \" #ceb7b7\",\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  greenButton: {\r\n    \"&:hover\": {\r\n      border: \"yellow\",\r\n    },\r\n  },\r\n  font: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  fabBackround: {\r\n    borderColor: \"#ffffff\",\r\n  },\r\n  // '&:hover':bac\r\n}));\r\n\r\nfunction Twitter() {\r\n  return (\r\n    <div className=\"twitter\">\r\n      <TwitterIcon style={{ color: \"#3f51b5\" }} />\r\n    </div>\r\n  );\r\n}\r\nfunction Google() {\r\n  return (\r\n    <div className=\"google\">\r\n      <SvgIcon>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 64 64\"\r\n          width=\"22px\"\r\n          height=\"22px\"\r\n        >\r\n          <radialGradient\r\n            id=\"95yY7w43Oj6n2vH63j6HJa\"\r\n            cx=\"31.998\"\r\n            cy=\"34.5\"\r\n            r=\"30.776\"\r\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0\" stop-color=\"#f4e9c3\" />\r\n            <stop offset=\".219\" stop-color=\"#f8eecd\" />\r\n            <stop offset=\".644\" stop-color=\"#fdf4dc\" />\r\n            <stop offset=\"1\" stop-color=\"#fff6e1\" />\r\n          </radialGradient>\r\n          <path\r\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJa)\"\r\n            d=\"M63.97,30.06C63.68,32.92,61.11,35,58.24,35H53c-1.22,0-2.18,1.08-1.97,2.34\tc0.16,0.98,1.08,1.66,2.08,1.66h3.39c2.63,0,4.75,2.28,4.48,4.96C60.74,46.3,58.64,48,56.29,48H51c-1.22,0-2.18,1.08-1.97,2.34\tc0.16,0.98,1.08,1.66,2.08,1.66h3.39c1.24,0,2.37,0.5,3.18,1.32C58.5,54.13,59,55.26,59,56.5c0,2.49-2.01,4.5-4.5,4.5h-44\tc-1.52,0-2.9-0.62-3.89-1.61C5.62,58.4,5,57.02,5,55.5c0-3.04,2.46-5.5,5.5-5.5H14c1.22,0,2.18-1.08,1.97-2.34\tC15.81,46.68,14.89,46,13.89,46H5.5c-2.63,0-4.75-2.28-4.48-4.96C1.26,38.7,3.36,37,5.71,37H13c1.71,0,3.09-1.43,3-3.16\tC15.91,32.22,14.45,31,12.83,31H4.5c-2.63,0-4.75-2.28-4.48-4.96C0.26,23.7,2.37,22,4.71,22h9.79c1.24,0,2.37-0.5,3.18-1.32\tC18.5,19.87,19,18.74,19,17.5c0-2.49-2.01-4.5-4.5-4.5h-6c-1.52,0-2.9-0.62-3.89-1.61S3,9.02,3,7.5C3,4.46,5.46,2,8.5,2h48\tc3.21,0,5.8,2.79,5.47,6.06C61.68,10.92,60.11,13,57.24,13H55.5c-3.04,0-5.5,2.46-5.5,5.5c0,1.52,0.62,2.9,1.61,3.89\tC52.6,23.38,53.98,24,55.5,24h3C61.71,24,64.3,26.79,63.97,30.06z\"\r\n          />\r\n          <linearGradient\r\n            id=\"95yY7w43Oj6n2vH63j6HJb\"\r\n            x1=\"29.401\"\r\n            x2=\"29.401\"\r\n            y1=\"4.064\"\r\n            y2=\"106.734\"\r\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0\" stop-color=\"#ff5840\" />\r\n            <stop offset=\".007\" stop-color=\"#ff5840\" />\r\n            <stop offset=\".989\" stop-color=\"#fa528c\" />\r\n            <stop offset=\"1\" stop-color=\"#fa528c\" />\r\n          </linearGradient>\r\n          <path\r\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJb)\"\r\n            d=\"M47.46,15.5l-1.37,1.48c-1.34,1.44-3.5,1.67-5.15,0.6c-2.71-1.75-6.43-3.13-11-2.37\tc-4.94,0.83-9.17,3.85-11.64,7.97l-8.03-6.08C14.99,9.82,23.2,5,32.5,5c5,0,9.94,1.56,14.27,4.46\tC48.81,10.83,49.13,13.71,47.46,15.5z\"\r\n          />\r\n          <linearGradient\r\n            id=\"95yY7w43Oj6n2vH63j6HJc\"\r\n            x1=\"12.148\"\r\n            x2=\"12.148\"\r\n            y1=\".872\"\r\n            y2=\"47.812\"\r\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0\" stop-color=\"#feaa53\" />\r\n            <stop offset=\".612\" stop-color=\"#ffcd49\" />\r\n            <stop offset=\"1\" stop-color=\"#ffde44\" />\r\n          </linearGradient>\r\n          <path\r\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJc)\"\r\n            d=\"M16.01,30.91c-0.09,2.47,0.37,4.83,1.27,6.96l-8.21,6.05c-1.35-2.51-2.3-5.28-2.75-8.22\tc-1.06-6.88,0.54-13.38,3.95-18.6l8.03,6.08C16.93,25.47,16.1,28.11,16.01,30.91z\"\r\n          />\r\n          <linearGradient\r\n            id=\"95yY7w43Oj6n2vH63j6HJd\"\r\n            x1=\"29.76\"\r\n            x2=\"29.76\"\r\n            y1=\"32.149\"\r\n            y2=\"-6.939\"\r\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0\" stop-color=\"#42d778\" />\r\n            <stop offset=\".428\" stop-color=\"#3dca76\" />\r\n            <stop offset=\"1\" stop-color=\"#34b171\" />\r\n          </linearGradient>\r\n          <path\r\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJd)\"\r\n            d=\"M50.45,51.28c-4.55,4.07-10.61,6.57-17.36,6.71C22.91,58.2,13.66,52.53,9.07,43.92l8.21-6.05\tC19.78,43.81,25.67,48,32.5,48c3.94,0,7.52-1.28,10.33-3.44L50.45,51.28z\"\r\n          />\r\n          <linearGradient\r\n            id=\"95yY7w43Oj6n2vH63j6HJe\"\r\n            x1=\"46\"\r\n            x2=\"46\"\r\n            y1=\"3.638\"\r\n            y2=\"35.593\"\r\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0\" stop-color=\"#155cde\" />\r\n            <stop offset=\".278\" stop-color=\"#1f7fe5\" />\r\n            <stop offset=\".569\" stop-color=\"#279ceb\" />\r\n            <stop offset=\".82\" stop-color=\"#2cafef\" />\r\n            <stop offset=\"1\" stop-color=\"#2eb5f0\" />\r\n          </linearGradient>\r\n          <path\r\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJe)\"\r\n            d=\"M59,31.97c0.01,7.73-3.26,14.58-8.55,19.31l-7.62-6.72c2.1-1.61,3.77-3.71,4.84-6.15\tc0.29-0.66-0.2-1.41-0.92-1.41H37c-2.21,0-4-1.79-4-4v-2c0-2.21,1.79-4,4-4h17C56.75,27,59,29.22,59,31.97z\"\r\n          />\r\n        </svg>\r\n      </SvgIcon>\r\n    </div>\r\n  );\r\n}\r\nfunction Facebook() {\r\n  return (\r\n    <div className=\"facebook\">\r\n      <SvgIcon>\r\n        <svg\r\n          fill=\"#3f51b5\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 48 48\"\r\n          width=\"24px\"\r\n          height=\"24px\"\r\n        >\r\n          <path d=\"M20.5,46c-1.378,0-2.5-1.121-2.5-2.5V26l-4.45,0.003c-1.367,0-2.489-1.11-2.501-2.476l-0.029-3.003 c-0.006-0.673,0.25-1.306,0.724-1.783C12.216,18.263,12.847,18,13.52,18H18v-4.5c0-6.746,3.442-10.462,9.691-10.462 c2.472,0,4.63,0.175,4.65,0.177c0.965,0.086,1.691,0.88,1.691,1.847v4.57c0,1.022-0.832,1.854-1.854,1.854h-2.908 c-1.217,0-2.208,0.99-2.208,2.208L27.006,18h4.438c0.713,0,1.393,0.306,1.867,0.838s0.699,1.243,0.616,1.951l-0.349,3 C33.432,25.05,32.364,26,31.096,26H27v17.5c0,1.379-1.122,2.5-2.5,2.5H20.5z\" />\r\n        </svg>\r\n      </SvgIcon>\r\n    </div>\r\n  );\r\n}\r\n\r\n// smart Component\r\nfunction CalliLogin() {\r\n  const classes = useStyles();\r\n\r\n  const PasswordInput = () => {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n      password: \"\",\r\n      showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n      setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n      setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n\r\n    // const [values, setValues] = React.useState({});\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <FormControl className={clsx(classes.textField)} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            className={classes.greenButton}\r\n            id=\"outlined-adornment-password\"\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            value={values.password}\r\n            onChange={handleChange(\"password\")}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <LockIcon size=\"small\" style={{ color: \"#ceb7b7\" }} />\r\n              </InputAdornment>\r\n            }\r\n            // style={{ width: \"100%\" }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  };\r\n  // email section\r\n  const EmailTextField = () => {\r\n    return (\r\n      <TextField\r\n        className=\"inputSpace\"\r\n        id=\"input-with-icon-textfield\"\r\n        required\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        style={{ width: \"100%\" }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <MailOutlineIcon size=\"small\" style={iconColor} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const FormController = () => {\r\n    const setStyles = makeStyles((theme) => ({\r\n      root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n      margin: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      textField: {\r\n        width: \"100%\",\r\n      },\r\n      greenButton: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"yellow\",\r\n          color: \"#FFF\",\r\n        },\r\n      },\r\n      font: {\r\n        fontSize: \"0.7rem\",\r\n      },\r\n      fabBackround: {\r\n        borderColor: \"#ffffff\",\r\n      },\r\n      // '&:hover':bac\r\n    }));\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        width: \"40%\",\r\n        // marginBottom: \"2rem\"\r\n        // fontSize: \"0.9rem\",\r\n      },\r\n    });\r\n    const inputStyles = makeStyles({\r\n      root: {\r\n        fontSize: \"1rem\",\r\n      },\r\n    });\r\n    const iconColor = {\r\n      color: \" #ceb7b7\",\r\n    };\r\n\r\n    const ForgotPasswordComponent = () => {\r\n      return <Button color=\"primary\">forgot password?</Button>;\r\n    };\r\n\r\n    const CheckBoxComponent = () => {\r\n      const classes = useStyles();\r\n\r\n      return (\r\n        <StylesProvider>\r\n          <FormControlLabel\r\n            // classNam\r\n\r\n            className={classes.font}\r\n            control={<Checkbox color=\"primary\" />}\r\n            label=\"Remember me\"\r\n            labelplacement=\"end\"\r\n            size=\"small\"\r\n          />\r\n        </StylesProvider>\r\n      );\r\n    };\r\n\r\n    const StyledFabTwitter = () => {\r\n      return (\r\n        <Fab aria-label=\"add\" className=\"div1\">\r\n          <TwitterIcon color=\"primary\" />\r\n        </Fab>\r\n      );\r\n    };\r\n    const StyledFabGoogle = () => {\r\n      return (\r\n        // <div >\r\n        <Fab className=\"div1\">\r\n          <InstagramIcon color=\"primary\" />\r\n        </Fab>\r\n        // </div>\r\n      );\r\n    };\r\n    const StyledFabFacebook = () => {\r\n      return (\r\n        <Fab className=\"div1\">\r\n          {/* custom svg */}\r\n          <Facebook />\r\n        </Fab>\r\n      );\r\n    };\r\n\r\n    const StyledButton = () => {\r\n      const myStyle = useStyles();\r\n      return (\r\n        <Button\r\n          // style={{ fontSize: \"1px\" }}\r\n          className={(myStyle.root, \"btns\")}\r\n          size=\"medium\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Login\r\n        </Button>\r\n      );\r\n    };\r\n\r\n    const StyledButton2 = () => {\r\n      const myStyle = useStyles();\r\n\r\n      return (\r\n        <Button\r\n          className={(myStyle.root, \"btns\")}\r\n          size=\"medium\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          Register\r\n        </Button>\r\n      );\r\n    };\r\n    return (\r\n      <StylesProvider injectFirst>\r\n        {/* <div> */}\r\n        <h2 className=\"welcomMsg\">Welcome Back :)</h2>\r\n        <p className=\"para\">\r\n          To keep connected with us please login with your personal information\r\n          {\" 🔔\"}\r\n        </p>\r\n        <div className=\"textField\">\r\n          <EmailTextField />\r\n          <PasswordInput />\r\n        </div>\r\n        {/* checkbox and forgot password */}\r\n        <div className=\"center\">\r\n          <div className=\"align\">\r\n            {\" \"}\r\n            <CheckBoxComponent />\r\n          </div>\r\n          <div className=\"align\">\r\n            <ForgotPasswordComponent />\r\n          </div>\r\n        </div>\r\n        <div className=\"buttonSection\">\r\n          <StyledButton />\r\n          <StyledButton2 />\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"lastPara\" style={{ color: \"#382f34\" }}>\r\n            Or you can join us with\r\n          </p>\r\n        </div>\r\n        <div className=\"socials\">\r\n          <StyledFabGoogle />\r\n          <StyledFabFacebook />\r\n          <StyledFabTwitter />\r\n        </div>\r\n        {/* </div> */}\r\n      </StylesProvider>\r\n    );\r\n  };\r\n  // < Button color=\"primary\" > Primary</Button>\r\n  // checkMediaQuery = () => {};\r\n\r\n  return (\r\n    // <StylesProvider injectFirst>\r\n    <div className=\"container\">\r\n      <div className=\"innerContainer\">\r\n        <div className=\"illustration\">\r\n          <div className=\"img\"></div>\r\n        </div>\r\n        <div className=\"form-section\" style={{ width: \"45%\" }}>\r\n          {FormController()}\r\n\r\n          {/* {window.addEventListener(\"resize\", this.checkMediaQuery)} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default CalliLogin;\r\n","import { CropFree } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport '../App.css';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles(()=>{\r\n    \r\n})\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <AppBar position=\"static\">\r\n        <Toolbar>\r\n         <Typography>\r\n             This a typo in a Toolbar\r\n         </Typography>\r\n         <AcUnitIcon />\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport Download from '../../img/download.svg';\r\n\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className=\"App\">\r\n        <div className=\"header\">\r\n            <div className=\"logo\"><img src={Download} alt=\"check\"/></div>\r\n            <a className=\"mobile-gate\">Login</a>\r\n            <div className=\"menu\">\r\n                <a href=\"#\">Who we are</a>\r\n                <a href=\"#\">What we do</a>\r\n                <a href=\"#\">Benefits</a>\r\n            </div>\r\n            <div className=\"menu-btn\">\r\n                <a href=\"\">Login</a>\r\n                <a class=\"hov\" href=\"\">Become a member</a>\r\n            </div>\r\n        </div>\r\n        <div className=\"section1\">\r\n\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Forms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  handleForm = (event) => {\r\n    alert(this.state.username + \"--\" + this.state.password);\r\n    // event.preventDefault();\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n  handleUserName = (event) => {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  };\r\n\r\n  UserName = () => {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        value={this.state.username}\r\n        onChange={this.handleUserName}\r\n      />\r\n    );\r\n  };\r\n  passwd = () => {\r\n    return (\r\n      <input\r\n        type=\"password\"\r\n        value={this.state.password}\r\n        onChange={this.handlePassword}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleForm}>\r\n          <this.UserName />\r\n          <this.passwd />\r\n          <button>submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Ken_login from \"./Components/Login/CalliLogin\";\r\nimport Header from \"./Components/Header\";\r\nimport Landing from \"./Components/Hompages/Landing\";\r\nimport CalliLogin from \"./Components/Login/CalliLogin\";\r\nimport Forms from \"./Components/Login/Forms\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CalliLogin />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}